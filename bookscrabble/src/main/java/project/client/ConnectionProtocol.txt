*This file is used to track the connection protocol with the server and which methods are used for each call*

How is the protocol built: 'id':'senderName'&'commandName':'arg1','arg2','arg3'... (args1 = sender)
We send a string between the host and the server, the string is seperated by '&' 
The first part is the name of the sender and ID, the second part is called the 'body'.
The Host will receive the message, split the message by '&', add the name of the sender to the list of players 
and pass the rest of the message to the HostSideHandler class.

Client to host Protocol: 
format = ('id':'senderName'&'commandName':'arg1','arg2','arg3'...)
Types of commands and their arguments if exist: 
"'id':'name'&join'" - Player wants to join the game
"'id':'name'&leave'" - Player wants to leave the game
"'id':'name'&'endGame'" - Host wants to end the game (Host only command)
"'id':'name'&'skipTurn'" - Player wants to skip his turn without placing a word
"'id':'name'&'Q':'word,row,col,isVertical'" - Player wants to place a word
"'id':'name'&'C':'word,row,col,isVertical'" - Player wants to challenge a failed word placement (args are identical to Q)
"'id':'name'&'startGame'" - Host wants to start the game

Host to client protocol: The host can either reply to a specific client or send a game update ("!") to all clients 

Types of responses and their arguments:
"join:'id',pName1, pName2 ...." - Seccessfully joined a game - ID given for future identification and a list of players in the game
"Q:'score','tiles'" - Query was received, score == 0 -> not boardLegal, score == -1 -> not dictionaryLegal, else score and tiles (replaces myTiles String) are sent
"C:'score','tiles'" - Challenge was received, score == 0 -> not boardLegal, score == -1 -> not dictionaryLegal, else score and tiles (replaces myTiles String) are sent

Types of commands and their return values: (Errors are also handled by the client in a seperate handler)
(Using updateAll and will have "!" to indicate a game update)
"!join:'name'" - A player joined the game
"!leave:'name'" - A player left the game
"!Q:'name','score'" - Player placed a word seccessfully and got 'score' points (Player will add up back to 7 tiles)
"!C:'name','score'" - Player challenged a failed word placement and got 'score' points (Player will add up back to 7 tiles)
"!skipTurn:'nextPlayer'" - Player skipped his turn
"!board:'board'" - The board was updated (board = String[])
"!startGame:'tiles','player1,player2..." - The game started and each player got 'tiles' tiles (This is sent to each player individually) and the order of the players
"!endGame:'winner'" - The game ended and the winner is 'winner'

Error codes:
200 - Unknown command
300 - Invalid command
400 - Missing arguments 
500 - Server error
600 - Access denied
700 - SERVER_FULL
800 - GAME_STARTED
900 - NAME_TAKEN
1000 - NOT_YOUR_TURN
1100 - NOT_ENOUGH_PLAYERS
1200 - GAME_ENDED
